"use client";

import { useState } from 'react';

const ContactForm = () => {
  const [formState, setFormState] = useState({
    name: '',
    phone: '',
    site: '',
    message: '',
  });

  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    await new Promise(resolve => setTimeout(resolve, 1000));
    setIsSubmitting(false);
  };

  return (
    <section id="contact" className="relative py-24 overflow-hidden">
      {/* –§–æ–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç */}
      <div className="absolute inset-0 bg-gradient-to-br from-gray-50 via-white to-gray-50" />
      
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0">
        <div className="absolute top-0 left-1/2 -translate-x-1/2 w-[800px] h-[800px] bg-[var(--primary)]/5 rounded-full blur-3xl" />
        <div className="absolute bottom-0 right-0 w-[600px] h-[600px] bg-blue-500/5 rounded-full blur-3xl" />
      </div>

      <div className="container-custom relative">
        <div className="max-w-4xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
          <div className="text-center mb-12">
            <span className="inline-block px-4 py-2 rounded-full bg-[var(--primary)]/10 
                           text-[var(--primary)] text-sm font-medium mb-4">
              –ù–∞—á–Ω–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
            </span>
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              –ì–æ—Ç–æ–≤—ã —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ?
            </h2>
            <p className="text-gray-600 text-lg">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
            </p>
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ñ–æ—Ä–º–æ–π */}
          <div className="bg-white rounded-2xl shadow-xl p-8 md:p-12 relative">
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
            <div className="absolute -top-6 -right-6 w-12 h-12 bg-[var(--primary)] rounded-xl rotate-12" />
            
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                {/* –ò–º—è */}
                <div className="relative">
                  <input
                    type="text"
                    value={formState.name}
                    onChange={(e) => setFormState({...formState, name: e.target.value})}
                    className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200
                             focus:border-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]/20
                             placeholder-transparent transition-all"
                    placeholder="–í–∞—à–µ –∏–º—è"
                    required
                  />
                  <label className="absolute left-4 -top-2.5 bg-white px-2 text-sm text-gray-600
                                  transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400
                                  peer-placeholder-shown:top-3 peer-focus:-top-2.5 peer-focus:text-sm
                                  peer-focus:text-[var(--primary)]">
                    –í–∞—à–µ –∏–º—è
                  </label>
                </div>

                {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
                <div className="relative">
                  <input
                    type="tel"
                    value={formState.phone}
                    onChange={(e) => setFormState({...formState, phone: e.target.value})}
                    className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200
                             focus:border-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]/20
                             placeholder-transparent transition-all"
                    placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                    required
                  />
                  <label className="absolute left-4 -top-2.5 bg-white px-2 text-sm text-gray-600
                                  transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400
                                  peer-placeholder-shown:top-3 peer-focus:-top-2.5 peer-focus:text-sm
                                  peer-focus:text-[var(--primary)]">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                </div>
              </div>

              {/* –°–∞–π—Ç */}
              <div className="relative">
                <input
                  type="url"
                  value={formState.site}
                  onChange={(e) => setFormState({...formState, site: e.target.value})}
                  className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200
                           focus:border-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]/20
                           placeholder-transparent transition-all"
                  placeholder="–°–∞–π—Ç –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –í–ö"
                />
                <label className="absolute left-4 -top-2.5 bg-white px-2 text-sm text-gray-600
                                transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400
                                peer-placeholder-shown:top-3 peer-focus:-top-2.5 peer-focus:text-sm
                                peer-focus:text-[var(--primary)]">
                  –°–∞–π—Ç –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –í–ö
                </label>
              </div>

              {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
              <div className="relative">
                <textarea
                  value={formState.message}
                  onChange={(e) => setFormState({...formState, message: e.target.value})}
                  className="peer w-full px-4 py-3 rounded-xl border-2 border-gray-200
                           focus:border-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]/20
                           placeholder-transparent transition-all"
                  rows={4}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ"
                />
                <label className="absolute left-4 -top-2.5 bg-white px-2 text-sm text-gray-600
                                transition-all peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400
                                peer-placeholder-shown:top-3 peer-focus:-top-2.5 peer-focus:text-sm
                                peer-focus:text-[var(--primary)]">
                  –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ
                </label>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              <button
                type="submit"
                disabled={isSubmitting}
                className="w-full py-4 px-6 rounded-xl bg-[var(--primary)] text-white font-medium
                         hover:bg-[var(--primary)]/90 transition-all
                         disabled:opacity-70 disabled:cursor-not-allowed
                         shadow-lg shadow-[var(--primary)]/25
                         flex items-center justify-center gap-2"
              >
                {isSubmitting ? (
                  <>
                    <svg className="animate-spin h-5 w-5" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4" />
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" />
                    </svg>
                    <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                  </>
                ) : (
                  <span>–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</span>
                )}
              </button>

              {/* –î–∏—Å–∫–ª–µ–π–º–µ—Ä */}
              <p className="text-center text-sm text-gray-500">
                –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π{' '}
                <a href="#" className="text-[var(--primary)] hover:underline">
                  –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </a>
              </p>
            </form>
          </div>

          {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
          <div className="mt-12 grid md:grid-cols-3 gap-6">
            {[
              {
                icon: "üéØ",
                title: "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç",
                description: "–ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∫–ª–∞–º—É –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞—â–µ–Ω–∏—è"
              },
              {
                icon: "üìä",
                title: "–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
                description: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö"
              },
              {
                icon: "ü§ù",
                title: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
                description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö"
              }
            ].map((item, index) => (
              <div key={index} className="bg-white/50 backdrop-blur-sm rounded-xl p-6 text-center">
                <span className="text-2xl mb-3 block">{item.icon}</span>
                <h3 className="font-medium mb-2">{item.title}</h3>
                <p className="text-sm text-gray-600">{item.description}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactForm; 